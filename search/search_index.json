{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"My Home","text":""},{"location":"about/","title":"About Me","text":"<p>Welcome! My name is Brielle and I am a third-year J.D. student at the James E. Rogers College of Law. I am passionate about leadership, open science, and exploring creative solutions in the legal field. This website is a compilation of resources and insights I've developed to help others integrate open science practices into their work, especially in the legal field.</p>"},{"location":"about/#about-me","title":"About Me","text":"<p> A little bit about me...</p> <p>I obtained my bachelor\u2019s degree in Cognitive Science, with an emphasis in Neuroscience, from UC-Davis. I work closely with the Natural Resource Use and Management Clinic and faculty at the College of Law who are completing empirical research in various areas. After graduation, I will clerk for the Arizona Supreme Court before joining Kirkland and Ellis in San Francisco, working in their Intellectual Property Litigation group.</p> <p>Currently, I'm participating in the University of Arizona's Roots for Resilience (R4R) program. The Roots for Resilience Program provides training and support to select graduate students on open, reproducible science and computational infrastructure tools to enhance research focused on resiliency in the environment. The Roots for Resilience research fellowship program in data science is led by the Arizona Institute for Resilience (AIR), CyVerse, and the Data Science Institute (DSI). For more information about these departments and programs, please visit the Additional Information Page located in the navigation bar on the left hand side of this page.</p> <p>For more information about my previous experience, I encourage you to look over my Resume.</p>"},{"location":"contact/","title":"Contact","text":"<p>This page will contain contact information and potentially other resources.</p>"},{"location":"open-science/","title":"What is Open Science?","text":"<p>\"Open Science is a collaborative and transparent approach to scientific research that emphasizes the accessibility, sharing, and reproducibility of data, methodologies, and findings to foster innovation and inclusivity\"</p> <p>-ChatGPT</p>"},{"location":"open-science/#what-tools-and-technologies-are-involved-in-open-science","title":"What tools and technologies are involved in open science?","text":"<p>There are a variety of different tools and technology available for use. Importantly, many of them are free to use and or available to use for free subject to University affiliation.</p>"},{"location":"open-science/#github","title":"GitHub","text":"<p>GitHub is a developer platform that allows developers to create, store, manage and share their code. It uses Git software, which provides distributed version control of access control, bug tracking, software feature requests, task management, continuous integration, and wikis for every project.</p>"},{"location":"open-science/#text-editors","title":"Text Editors","text":"<p>Text editors can be used to modify files on your local machine.</p>"},{"location":"open-science/#atom","title":"Atom","text":"<p>Atom text editor is a free, open-source code editor developed by GitHub, known for its high level of customizability and \"hackable\" nature, allowing users to extensively modify its features and appearance using HTML, CSS, and JavaScript; essentially letting developers tailor it to their specific needs through a wide range of installable packages.</p>"},{"location":"open-science/#vs-code","title":"VS Code","text":"<p>\"At its heart, Visual Studio Code features a lightning fast source code editor, perfect for day-to-day use. With support for hundreds of languages, VS Code helps you be instantly productive with syntax highlighting, bracket-matching, auto-indentation, box-selection, snippets, and more.\" Visual Studio Code.</p>"},{"location":"open-science/practices/","title":"Open Science Practices","text":""},{"location":"open-science/practices/#creating-a-data-management-plan-dmp","title":"Creating a Data Management Plan (DMP):","text":"<p>For detailed instructions on creating a Data Management Plan, visit this Step-by-Step Guide to Creating a Data Management Plan provided by Boston College Libraries.</p>"},{"location":"open-science/practices/#considerations","title":"Considerations","text":""},{"location":"open-science/practices/#metadata-unlocking-the-power-of-your-data","title":"Metadata: Unlocking the Power of Your Data","text":"<p>Metadata is often described as \"data about data,\" but its value goes far beyond this simple definition. Well-structured metadata ensures that your data is discoverable, understandable, and reusable by others. It provides critical context, such as who created the data, how it was collected, and any constraints on its use. Properly annotated metadata is essential for reproducibility, enabling researchers to build on each other's work efficiently.</p>"},{"location":"open-science/practices/#data-security-protecting-sensitive-information","title":"Data Security: Protecting Sensitive Information","text":"<p>Ensuring the security of your data is paramount, especially when handling sensitive or confidential information. Best practices include implementing robust access controls, encrypting data during storage and transmission, and regularly backing up datasets. Protecting data not only safeguards the integrity of your research but also complies with legal and institutional requirements.</p>"},{"location":"open-science/practices/#ethical-considerations-balancing-openness-with-responsibility","title":"Ethical Considerations: Balancing Openness with Responsibility","text":"<p>While open science promotes transparency and collaboration, it\u2019s vital to address ethical concerns when sharing data. Researchers must consider issues such as participant privacy, informed consent, and potential misuse of data. Anonymization techniques and restricted-access policies can help strike a balance between openness and protecting the rights of individuals or communities involved in your research.</p>"},{"location":"open-science/practices/#other-dmp-resources-university-of-arizona","title":"Other DMP Resources - University of Arizona","text":"<p>For examples of Data Management Plans provided by the University of Arizona, visit the University Libraries Data Cooperative Page with DMP Examples.</p> <p>Additionally, the University of Arizona provides a \"Quick Start Guide\" for getting started, working on your project, and bringing it to completion. This resource can be accesses here.</p>"},{"location":"open-science/practices/#publishing-in-open-access-journals","title":"Publishing in Open Access Journals:","text":"<p>When publishing your work in Open Access Journals, it is important to (1) find a journal that aligns with the goals of your research, (2) understand the licensing implications of publishing in whichever journal you choose, and (3) learn how you can best mitigate any costs associated with publishing your research. The following content touches on each of those considerations.</p> <p>Finding Open Access Journals: Open access journals provide free, unrestricted access to published research, making your work available to a wider audience. Start by exploring directories like the Directory of Open Access Journals (DOAJ) or institutional repositories. These platforms help you identify reputable journals that align with your research focus. Look for journals that adhere to open science principles, such as transparent peer review and data-sharing policies.</p> <p>Understanding Licensing (e.g., Creative Commons): When publishing in an open access journal, understanding licensing is crucial. Creative Commons (CC) licenses, such as CC BY, dictate how your work can be used by others. For example, CC BY allows others to reuse your work with proper attribution, fostering collaboration while protecting your authorship. Familiarize yourself with different licenses to select one that aligns with your goals for sharing your research. To learn more about Creative Commons licensing, visit Creative Commons: About CC Licenses.</p> <p>Overcoming Article Processing Charge (APC) Barriers: While many open access journals charge APCs to cover publication costs, there are ways to reduce or eliminate these fees:</p> <p>Institutional Support: Check if your institution has agreements with publishers or funds for open access publishing.</p> <p>Waivers and Discounts: Many journals offer waivers for researchers from underfunded institutions or developing countries.</p> <p>APC-Free Journals: Seek out \"diamond\" or \"platinum\" open access journals, which don\u2019t charge APCs and rely on alternative funding sources.</p>"},{"location":"open-science/practices/#sharing-data-and-code","title":"Sharing Data and Code:","text":"<p>Platforms for sharing: GitHub, Zenodo, Dryad   Basics of version control with GitHub.</p>"},{"location":"open-science/practices/#reproducibility-in-research","title":"Reproducibility in Research:","text":"<p>Practical steps to ensure your work is replicable by others.</p>"},{"location":"open-science/tools-and-resources/github-basics/","title":"Basics of Version Control and Workflow with GitHub","text":"<p>Version control is a system that helps you track changes to files over time, collaborate with others, and maintain organized, reproducible workflows. GitHub is a popular platform for version control using Git, a powerful tool that enables you to manage your projects effectively.</p>"},{"location":"open-science/tools-and-resources/github-basics/#key-concepts-in-version-control-with-github","title":"Key Concepts in Version Control with GitHub","text":"<ol> <li>Repository (Repo):</li> <li>A repository is like a folder that contains all your project files and the history of changes made to them.</li> <li>You can create a repository locally on your computer or host it online on GitHub.</li> <li>Commits:</li> <li>A commit is a snapshot of your project at a specific moment in time. It represents the changes you\u2019ve made to the files since the last commit.</li> <li>Commits include a message describing the changes, making it easier to track progress.</li> <li>Branches:</li> <li>Branches allow you to work on different versions of your project simultaneously.  </li> <li>For example, you can create a branch for adding new features without affecting the main branch (the production-ready version of your project).</li> <li>Merge:</li> <li>Merging combines changes from one branch into another, such as integrating a new feature branch into the main branch.</li> <li>Remote and Local Repositories:</li> <li>A local repository exists on your computer, while a remote repository is hosted on GitHub.</li> <li>Changes made locally can be pushed to GitHub, and changes from GitHub can be pulled to your local system.</li> </ol>"},{"location":"open-science/tools-and-resources/github-basics/#basic-github-workflow","title":"Basic GitHub Workflow","text":"<ol> <li>Clone a Repository:</li> <li>To work on an existing project, you clone the repository to your local machine.</li> <li>Example command: <pre><code>git clone &lt;repository_url&gt;\n</code></pre></li> <li>Make Changes and Commit:</li> <li>After editing files, you stage the changes and commit them:      <pre><code>git add &lt;file_name&gt;\ngit commit -m \"Descriptive message about changes\"\n</code></pre></li> <li>Push Changes:</li> <li>Push your commits to the remote repository on GitHub:      <pre><code>git push origin &lt;branch_name&gt;\n</code></pre></li> <li>Pull Changes:</li> <li>Update your local repository with changes made on the remote repository:      <pre><code>git pull origin &lt;branch_name&gt;\n</code></pre></li> <li>Create and Merge Branches:</li> <li>Create a new branch for a feature:      <pre><code>git checkout -b &lt;branch_name&gt;\n</code></pre></li> <li>Merge it into the main branch once done:      <pre><code>git checkout main\ngit merge &lt;branch_name&gt;\n</code></pre></li> </ol>"},{"location":"open-science/tools-and-resources/github-basics/#why-use-github-for-version-control","title":"Why Use GitHub for Version Control?","text":"<ul> <li>Collaboration: Easily work with multiple contributors, track their changes, and resolve conflicts.</li> <li>History Tracking: Every change is logged, making it simple to revert to a previous version if needed.</li> <li>Integration: GitHub integrates with many tools for testing, deployment, and project management.</li> <li>Accessibility: Access your project from anywhere with internet connectivity.</li> </ul> <p>With GitHub, managing your project\u2019s version history and collaborating with others becomes streamlined, ensuring transparency, reproducibility, and efficiency.</p>"},{"location":"open-science/tools-and-resources/resources/","title":"Tools and Resources","text":""},{"location":"open-science/tools-and-resources/resources/#repositories-for-open-science","title":"Repositories for Open Science:","text":"<p>GitHub Zenodo Open Science Framework (OSF) Figshare</p>"},{"location":"open-science/tools-and-resources/resources/#open-source-tools-for-research","title":"Open Source Tools for Research:","text":"<p>Jupyter Notebooks for coding and data visualization. RStudio for statistical analysis. Zotero or Mendeley for managing references.</p>"},{"location":"open-science/tools-and-resources/resources/#useful-guides-and-templates","title":"Useful Guides and Templates:","text":"<p>Example: Templates for DMPs, reproducible research workflows.</p>"},{"location":"personal-website/chatgpt/","title":"Using ChatGPT","text":"<p>This page includes some example prompts that you could use to begin learning about how to create a website using Markdown and GitHub:</p>"},{"location":"personal-website/chatgpt/#beginner-level-prompts","title":"Beginner-Level Prompts:","text":"<ol> <li> <p>\"How can I create a simple website using GitHub Pages and Markdown? Can you provide step-by-step instructions?\"</p> </li> <li> <p>\"What are the basic Markdown elements I need to know to format a web page (e.g., headings, lists, links, and images)?\"</p> </li> <li> <p>\"Can you explain how GitHub Pages works and how I can host a website for free on it?\"</p> </li> <li> <p>\"What is MkDocs, and how can I use it to create a documentation website?\"</p> </li> <li> <p>\"What are the best Markdown editors for working on a website project? Are there any that integrate well with GitHub?\"</p> </li> </ol>"},{"location":"personal-website/chatgpt/#intermediate-level-prompts","title":"Intermediate-Level Prompts:","text":"<ol> <li> <p>\"How do I customize the theme of a GitHub Pages website? Can I use a Jekyll theme, and how do I set it up?\"</p> </li> <li> <p>\"How can I organize a GitHub repository for a Markdown-based website? What structure should I use for files and folders?\"</p> </li> <li> <p>\"What are some tips for writing reusable and maintainable Markdown for a website project?\"</p> </li> <li> <p>\"Can you explain how to enable search functionality in a website built with Markdown and hosted on GitHub Pages?\"</p> </li> <li> <p>\"What are some examples of interactive features I can add to a Markdown-based website, such as forms or embedded media?\"</p> </li> </ol>"},{"location":"personal-website/chatgpt/#advanced-level-prompts","title":"Advanced-Level Prompts:","text":"<ol> <li> <p>\"How do I automate updates to my GitHub Pages site using CI/CD pipelines, such as with GitHub Actions?\"</p> </li> <li> <p>\"How can I integrate advanced features like a contact form or custom analytics into a GitHub Pages site built with Markdown?\"</p> </li> <li> <p>\"Can you walk me through creating a table of contents for a multi-page Markdown-based website?\"</p> </li> <li> <p>\"How do I handle version control for a Markdown-based website and collaborate with others using GitHub?\"</p> </li> <li> <p>\"What are the limitations of Markdown for building websites, and how can I extend its functionality with tools like HTML, CSS, or JavaScript?\"</p> </li> </ol> <p>These prompts cater to various levels of expertise and specific interests, from setting up the basics to implementing advanced features.</p> <p>Consider adding any or all of the following to narrow the scope of ChatGPT's response:</p> <ol> <li>Briefly explain [Prompt from Above]</li> <li>Please provide your answer one step at a time so that I can follow along.</li> <li>Ask me questions that I need to answer in order to complete this project.</li> </ol>"},{"location":"personal-website/personalwebsite/","title":"How to Create a Personal Website Using Markdown and GitHub","text":"<p>Creating your own personal website might sound intimidating, but it's surprisingly simple with Markdown and GitHub. Here\u2019s a step-by-step guide to help you build and host your website\u2014even if you have no prior coding experience!</p>"},{"location":"personal-website/personalwebsite/#step-1-set-up-your-tools","title":"Step 1: Set Up Your Tools","text":"<ol> <li>Create a GitHub Account    If you don\u2019t already have one, sign up for free at github.com.  </li> <li>Install GitHub Desktop (Optional)    Download and install GitHub Desktop to manage your projects visually.</li> <li>Download a Text Editor    Use a simple text editor like Atom or VS Code to edit your files.</li> </ol>"},{"location":"personal-website/personalwebsite/#step-2-create-your-repository","title":"Step 2: Create Your Repository","text":"<p>This can be achieved by either (1) creating a new repository (described below), or (2)forking an existing template.</p>"},{"location":"personal-website/personalwebsite/#using-a-template","title":"Using a Template","text":"<p>If you would like to use a template, you can fork this repository created by the Cyverse Team at the University of Arizona.</p> <ol> <li> <p>Log in to GitHub</p> </li> <li> <p>Open Template</p> <ul> <li>Select the link to the template (above).</li> </ul> </li> <li> <p>Fork the Repository</p> <ul> <li>This step essentially creates a copy of the template that will be your own, housed in your own GitHub account.</li> </ul> </li> <li> <p>Select the green \"Code\" button.</p> </li> <li> <p>Copy the URL.</p> </li> <li> <p>Import the repository by selecting the dropdown in the upper right hand corner of the homepage of GitHub and clicking \"Import Repository.\"</p> <ul> <li>Paste the URL you copied under the \"The URL for your source repository.\"</li> <li>Name your repository.</li> <li>Select begin import in the bottom right hand side of the screen. Note, the default is that this repository will be public.</li> </ul> </li> </ol>"},{"location":"personal-website/personalwebsite/#create-the-materials-yourself","title":"Create the Materials Yourself","text":"<ol> <li>Log in to GitHub <ul> <li>Go to your GitHub account and click the green \"New\" button to create a new repository.  </li> </ul> </li> <li>Set Repository Details <ul> <li>Name: Choose a name for your website (e.g., <code>my-website</code>).  </li> <li>Description: Add a short description (optional).  </li> <li>Visibility: Set the repository to \"Public\" (necessary for hosting).  </li> <li>Check \"Add a README file\" to include a starting file.  </li> </ul> </li> <li>Create the Repository <ul> <li>Click \"Create repository\" to finalize.</li> </ul> </li> </ol>"},{"location":"personal-website/personalwebsite/#step-3-set-up-your-website","title":"Step 3: Set Up Your Website","text":"<ol> <li>Enable GitHub Pages <ul> <li>In your repository, go to Settings &gt; Pages.  </li> <li>Under Source, select Main (or the branch you want to use) and click Save.  </li> <li>GitHub will provide a link to your live site (e.g., <code>https://yourusername.github.io/my-website</code>).</li> </ul> </li> <li>Choose a Theme <ul> <li>In the Pages settings, scroll to the theme section.  </li> <li>Select a theme to style your site automatically.</li> </ul> </li> </ol>"},{"location":"personal-website/personalwebsite/#step-4-create-your-website-content","title":"Step 4: Create Your Website Content","text":"<ol> <li>Learn Basic Markdown    Markdown is a simple text formatting language.    Example syntax:<ul> <li><code>#</code> for headings  </li> <li><code>**bold**</code> for bold text  </li> <li><code>[link text](url)</code> for hyperlinks  </li> </ul> </li> <li>Edit Your README File <ul> <li>Go to your repository and click on <code>README.md</code>.  </li> <li>Use the pencil icon to edit it and add content in Markdown.    Example: <pre><code># Welcome to My Website\nHi! I'm [Your Name]. This is my personal site built with Markdown and GitHub Pages.\n</code></pre></li> </ul> </li> <li>Save Changes <ul> <li>Click \"Commit changes\" to update your site.</li> </ul> </li> </ol>"},{"location":"personal-website/personalwebsite/#step-5-add-additional-pages","title":"Step 5: Add Additional Pages","text":"<ol> <li>Create New Markdown Files <ul> <li>Click \"Add file\" &gt; \"Create new file\".  </li> <li>Name your file (e.g., <code>about.md</code>) and add content in Markdown.  </li> </ul> </li> <li>Link Between Pages <ul> <li>Use links to navigate between pages: <pre><code>[About Me](about.md)\n[Home](README.md)\n</code></pre></li> </ul> </li> <li>Commit Changes <ul> <li>Save each file by clicking \"Commit changes\".</li> </ul> </li> </ol>"},{"location":"personal-website/personalwebsite/#step-6-customize-your-site-with-mkdocs-optional","title":"Step 6: Customize Your Site with MkDocs (Optional)","text":"<p>If you want a more structured website: 1. Install MkDocs     - Download Python from python.org and install it.     - Use a terminal or command prompt to install MkDocs: <pre><code>pip install mkdocs\n</code></pre> 2. Create an MkDocs Project     - Open a terminal and navigate to your repository folder: <pre><code>cd /path/to/your-repository\n</code></pre>      - Create a new project: <pre><code>mkdocs new .\n</code></pre> 3. Edit Your <code>mkdocs.yml</code>     - Update the configuration file to include your site's structure. 4. Serve Locally     - Preview your site locally before pushing changes: <pre><code>mkdocs serve\n</code></pre> 5. Deploy to GitHub Pages     - Push your changes, then deploy: <pre><code>mkdocs gh-deploy\n</code></pre></p>"},{"location":"personal-website/personalwebsite/#step-7-share-your-website","title":"Step 7: Share Your Website","text":"<p>Once your site is live, share your GitHub Pages link with your colleagues, organization, or potential employers!  </p>"},{"location":"personal-website/personalwebsite/#resources","title":"Resources","text":"<ul> <li>GitHub Markdown Guide: GitHub Docs</li> <li>MkDocs Documentation: MkDocs.org</li> </ul> <p>With these steps, you\u2019re on your way to creating a functional personal website!</p> <p>Another useful resource when building a personal website is ChatGPT. If you would like to customize your website, ChatGPT can help provide you with directions on how to achieve the exact characteristics and components you'd like to incorporate into your website.</p>"},{"location":"reminders/reminders/","title":"Helpful Reminders for Coding","text":""},{"location":"reminders/reminders/#using-the-terminal","title":"Using the Terminal","text":"<p>Here\u2019s a handy list of terminal commands and prompts you can use for common tasks. They\u2019re grouped by purpose for easier reference:</p>"},{"location":"reminders/reminders/#navigation-and-file-management","title":"Navigation and File Management","text":"<ul> <li> <p><code>ls</code> </p> <ul> <li>List all files and directories in the current directory.</li> </ul> </li> <li> <p><code>cd [directory_name]</code> </p> <ul> <li>Change to a specified directory.</li> </ul> </li> <li> <p><code>cd ..</code> </p> <ul> <li>Go up one directory level.</li> </ul> </li> <li> <p><code>pwd</code> </p> <ul> <li>Show the current directory path.</li> </ul> </li> <li> <p><code>mkdir [new_directory_name]</code> </p> <ul> <li>Create a new directory.</li> </ul> </li> <li> <p><code>touch [file_name]</code> </p> <ul> <li>Create an empty file.</li> </ul> </li> <li> <p><code>rm [file_name]</code> </p> <ul> <li>Delete a file.</li> </ul> </li> <li> <p><code>rm -r [directory_name]</code> </p> <ul> <li>Delete a directory and its contents.</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#git-commands","title":"Git Commands","text":"<ul> <li><code>git clone [repository_url]</code> </li> <li> <p>Clone a repository from GitHub to your computer.</p> </li> <li> <p><code>git status</code> </p> <ul> <li>Check the status of your Git repository.</li> </ul> </li> <li> <p><code>git add [file_name]</code> or <code>git add .</code> </p> <ul> <li>Stage a file or all files for a commit.</li> </ul> </li> <li><code>git commit -m \"commit message\"</code> <ul> <li>Save staged changes with a message.</li> </ul> </li> <li><code>git push</code> <ul> <li>Push committed changes to GitHub.</li> </ul> </li> <li><code>git pull</code> <ul> <li>Fetch and merge changes from the remote repository.</li> </ul> </li> <li><code>git log</code> <ul> <li>View the commit history.</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#working-with-files","title":"Working with Files","text":"<ul> <li><code>cat [file_name]</code> <ul> <li>Display the contents of a file.</li> </ul> </li> <li><code>nano [file_name]</code> or <code>vim [file_name]</code> <ul> <li>Open a file in a terminal-based text editor.</li> </ul> </li> <li><code>cp [source_file] [destination]</code> <ul> <li>Copy a file to a different location.</li> </ul> </li> <li><code>mv [file_name] [new_location_or_new_name]</code> <ul> <li>Move or rename a file.</li> </ul> </li> <li><code>code .</code> <ul> <li>Open the current directory in Visual Studio Code (if installed).</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#python-and-virtual-environments","title":"Python and Virtual Environments","text":"<ul> <li><code>python3 [script_name.py]</code> <ul> <li>Run a Python script.</li> </ul> </li> <li><code>python3 -m venv [env_name]</code> <ul> <li>Create a Python virtual environment.</li> </ul> </li> <li><code>source [env_name]/bin/activate</code> <ul> <li>Activate a virtual environment.</li> </ul> </li> <li><code>deactivate</code> <ul> <li>Deactivate a virtual environment.</li> </ul> </li> <li><code>pip install [package_name]</code> <ul> <li>Install a Python package.</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#mkdocs-and-web-development","title":"MkDocs and Web Development","text":"<ul> <li><code>mkdocs new [project_name]</code> <ul> <li>Create a new MkDocs project.</li> </ul> </li> <li><code>mkdocs serve</code> <ul> <li>Preview your MkDocs site locally.</li> </ul> </li> <li><code>mkdocs build</code> <ul> <li>Build your MkDocs project for deployment.</li> </ul> </li> <li><code>mkdocs gh-deploy</code> <ul> <li>Deploy your MkDocs site to GitHub Pages.</li> </ul> </li> <li><code>open index.html</code> <ul> <li>Open an HTML file in the browser (Mac). Use <code>xdg-open</code> for Linux or <code>start</code> for Windows.</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#shortcuts-and-system-info","title":"Shortcuts and System Info","text":"<ul> <li><code>ctrl + c</code> <ul> <li>Cancel the current command or process.</li> </ul> </li> <li><code>clear</code> <ul> <li>Clear the terminal screen.</li> </ul> </li> <li><code>history</code> <ul> <li>Show your command history.</li> </ul> </li> <li><code>uname -a</code> <ul> <li>Show system information.</li> </ul> </li> <li><code>top</code> <ul> <li>View running processes and system usage.</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#search-and-text-manipulation","title":"Search and Text Manipulation","text":"<ul> <li><code>grep [search_term] [file_name]</code> <ul> <li>Search for a term in a file.</li> </ul> </li> <li><code>find . -name \"[file_name]\"</code> <ul> <li>Search for a file in the current directory and subdirectories.</li> </ul> </li> <li><code>echo \"text\" &gt; [file_name]</code> <ul> <li>Write text to a file.</li> </ul> </li> <li><code>cat [file1] [file2] &gt; [new_file]</code> <ul> <li>Combine files into a new file.</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#networking-and-internet","title":"Networking and Internet","text":"<ul> <li><code>curl [url]</code> <ul> <li>Fetch data from a URL.</li> </ul> </li> <li><code>ping [hostname]</code> <ul> <li>Test the connection to a server.</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#using-markdown","title":"Using Markdown","text":"<p>Here\u2019s a a similar list of markdown features that you can reference when building a website!</p>"},{"location":"reminders/reminders/#headings","title":"Headings","text":"<ul> <li><code># Heading 1</code> </li> <li>Use <code>#</code> for the largest heading, and add more <code>#</code> for smaller headings (up to six levels): Example: <pre><code># Heading 1  \n## Heading 2  \n### Heading 3  \n</code></pre></li> <li>Keep heading levels consistent to ensure a logical structure, especially for longer documents.</li> </ul>"},{"location":"reminders/reminders/#formatting-text","title":"Formatting Text","text":"<ul> <li>Bold: </li> <li>Use <code>**</code> or <code>__</code> around text for bold: <pre><code>**Bold Text**  \n__Bold Text__\n</code></pre></li> <li>Italic: </li> <li>Use <code>*</code> or <code>_</code> around text for italic: <pre><code>*Italic Text*  \n_Italic Text_\n</code></pre></li> <li>Bold and Italic: </li> <li>Combine <code>***</code> for bold and italic: <pre><code>***Bold and Italic***\n</code></pre></li> <li>Strikethrough: </li> <li>Use <code>~~</code> around text for strikethrough: <pre><code>~~Strikethrough~~\n</code></pre></li> </ul>"},{"location":"reminders/reminders/#lists","title":"Lists","text":"<ul> <li>Unordered Lists: </li> <li>Use <code>-</code>, <code>+</code>, or <code>*</code> for bullets: <pre><code>- Item 1  \n- Item 2  \n</code></pre></li> <li>Ordered Lists: </li> <li>Use numbers followed by periods: <pre><code>1. First item  \n2. Second item  \n</code></pre></li> <li>Nested Lists: </li> <li>Indent with spaces for sub-items: <pre><code>- Main item  \n  - Sub-item\n</code></pre></li> </ul>"},{"location":"reminders/reminders/#links-and-images","title":"Links and Images","text":"<ul> <li>Links: <ul> <li>Use <code>[link text](URL)</code> to create hyperlinks: <pre><code>[Google](https://www.google.com)\n</code></pre></li> </ul> </li> <li>Images: <ul> <li>Use <code>![alt text](image_URL_or_path)</code> to display images: <pre><code>![Example Image](https://example.com/image.png)\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#code-and-syntax-highlighting","title":"Code and Syntax Highlighting","text":"<ul> <li>Inline Code: <ul> <li>Use backticks <code>`</code> for inline code: <pre><code>Use the `ls` command to list files.\n</code></pre></li> </ul> </li> <li>Code Blocks: <ul> <li>Use triple backticks <code>```</code> for multi-line code blocks, and specify the language for syntax highlighting: <pre><code>```python\nprint(\"Hello, World!\")\n</code></pre>   ```</li> </ul> </li> </ul>"},{"location":"reminders/reminders/#tables","title":"Tables","text":"<ul> <li>Basic Table Syntax: <ul> <li>Use pipes <code>|</code> and hyphens <code>-</code> to create tables: <pre><code>| Header 1 | Header 2 |  \n|----------|----------|  \n| Row 1    | Data     |  \n| Row 2    | Data     |\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#blockquotes","title":"Blockquotes","text":"<ul> <li>Blockquotes: <ul> <li>Use <code>&gt;</code> for quoting text: <pre><code>&gt; This is a blockquote.\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#horizontal-rules","title":"Horizontal Rules","text":"<ul> <li>Horizontal Line: <ul> <li>Use <code>---</code>, <code>***</code>, or <code>___</code> to create a horizontal rule: <pre><code>---\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#lists-with-checkboxes","title":"Lists with Checkboxes","text":"<ul> <li>Task Lists: <ul> <li>Use <code>- [ ]</code> for an unchecked box and <code>- [x]</code> for a checked box: <pre><code>- [ ] Task 1  \n- [x] Task 2 (Completed)\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#special-characters","title":"Special Characters","text":"<ul> <li>Escape Special Characters: <ul> <li>Use a backslash <code>\\</code> before special Markdown symbols to display them as text: <pre><code>Use `\\*` to show an asterisk.\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#tips-for-advanced-markdown","title":"Tips for Advanced Markdown","text":"<ul> <li>Use Markdown Preview: <ul> <li>In editors like Atom or VS Code, use the preview feature (<code>Ctrl+Shift+M</code> in Atom) to see rendered Markdown.</li> </ul> </li> <li>Use HTML for Extensions: <ul> <li>You can embed HTML directly for features not natively supported by Markdown: <pre><code>&lt;details&gt;\n&lt;summary&gt;Click to expand!&lt;/summary&gt;\nHidden text here.\n&lt;/details&gt;\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#markdown-for-github","title":"Markdown for GitHub","text":"<ul> <li>GitHub-Flavored Markdown (GFM): <ul> <li>Supports extended features like task lists, tables, and emoji: <pre><code>- [ ] GitHub supports task lists  \n- :smile: You can use emoji with `:emoji_name:`\n</code></pre></li> </ul> </li> <li>Linking Files: <ul> <li>Use relative paths for linking files in the same repository: <pre><code>[ReadMe](docs/README.md)\n</code></pre></li> </ul> </li> </ul>"},{"location":"reminders/reminders/#keep-it-readable","title":"Keep It Readable","text":"<ul> <li>Break lines by adding two spaces at the end of a line to avoid clutter in long paragraphs.  </li> <li>Use headings, lists, and horizontal rules to structure content logically for readability.</li> </ul> <p>This list can serve as a quick reference when you're working with Markdown!</p>"}]}